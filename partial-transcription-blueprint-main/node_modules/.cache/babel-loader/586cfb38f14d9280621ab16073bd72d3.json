{"ast":null,"code":"import { clientConfig } from '../config/clientConfig';\nimport moment from 'moment';\n\nconst platformClient = require('purecloud-platform-client-v2/dist/node/purecloud-platform-client-v2.js');\n\nconst usersApi = new platformClient.UsersApi();\nconst analyticsApi = new platformClient.AnalyticsApi();\nconst routingApi = new platformClient.RoutingApi();\nconst client = platformClient.ApiClient.instance;\nconst {\n  clientId,\n  redirectUri\n} = clientConfig;\nconst cache = {};\n/**\n * Authenticate the client using Implicit Grant.\n * \n * @returns auth data\n */\n\nexport function authenticate() {\n  return client.loginImplicitGrant(clientId, redirectUri, {\n    state: 'state'\n  }).then(data => {\n    return data;\n  }).catch(err => {\n    console.error(err);\n  });\n}\n/**\n * Get a user by id.\n * \n * @param id the user's id\n * @returns user search response\n */\n\nexport function getAgentByUserId(id) {\n  if (!id) return '';\n  return usersApi.getUser(id).then(data => {\n    var _data$images, _data$images$find;\n\n    console.log('AGENT USER DATA', data);\n    const agentName = data.name;\n    const imageUri = (_data$images = data.images) === null || _data$images === void 0 ? void 0 : (_data$images$find = _data$images.find(i => i.resolution === 'x96')) === null || _data$images$find === void 0 ? void 0 : _data$images$find.imageUri;\n    return {\n      agentName,\n      imageUri\n    };\n  }).catch(err => {\n    console.error(err);\n    return '';\n  });\n}\n/**\n * Get the queues in logged-in user's organization.\n * \n * @param skipCache determines whether to check cache before API call\n * @returns response with queues\n */\n\nexport async function getQueues() {\n  let skipCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  if (skipCache) {\n    return routingApi.getRoutingQueues({\n      pageSize: 100\n    });\n  } else if (cache['queues']) {\n    return cache['queues'];\n  } else {\n    try {\n      cache['queues'] = await routingApi.getRoutingQueues({\n        pageSize: 100\n      });\n      return cache['queues'];\n    } catch (err) {\n      console.error(err);\n    }\n  }\n}\n/**\n * Get active conversations for queue using conversation analytics details query.\n * \n * @param queueId the queue's id\n * @returns active conversation response\n */\n\nexport function getActiveConversationsForQueue(queueId) {\n  const startInterval = moment().add(-1, 'day').startOf('day');\n  const endInterval = moment().add(1, 'day').startOf('day');\n  const body = {\n    interval: `${startInterval.toISOString(true)}/${endInterval.toISOString(true)}`,\n    order: \"asc\",\n    orderBy: \"conversationStart\",\n    paging: {\n      pageSize: 25,\n      pageNumber: 1\n    },\n    segmentFilters: [{\n      type: \"or\",\n      predicates: [{\n        type: \"dimension\",\n        dimension: \"queueId\",\n        operator: \"matches\",\n        value: queueId\n      }]\n    }],\n    conversationFilters: [{\n      type: \"or\",\n      predicates: [{\n        type: \"dimension\",\n        dimension: \"conversationEnd\",\n        operator: \"notExists\",\n        value: null\n      }]\n    }]\n  };\n  return analyticsApi.postAnalyticsConversationsDetailsQuery(body).then(conversationData => {\n    var _conversationData$con;\n\n    console.log('CONVERSATION DATA', conversationData);\n    const conversations = (conversationData === null || conversationData === void 0 ? void 0 : (_conversationData$con = conversationData.conversations) === null || _conversationData$con === void 0 ? void 0 : _conversationData$con.filter(conversation => {\n      var _conversation$partici, _conversation$partici2, _conversation$partici3, _conversation$partici4;\n\n      return ((_conversation$partici = conversation.participants) === null || _conversation$partici === void 0 ? void 0 : (_conversation$partici2 = _conversation$partici[0]) === null || _conversation$partici2 === void 0 ? void 0 : (_conversation$partici3 = _conversation$partici2.sessions) === null || _conversation$partici3 === void 0 ? void 0 : (_conversation$partici4 = _conversation$partici3[0]) === null || _conversation$partici4 === void 0 ? void 0 : _conversation$partici4.mediaType) === 'voice';\n    })) || [];\n    return {\n      queueId,\n      conversations\n    };\n  }).catch(err => {\n    console.error(err);\n  });\n}","map":{"version":3,"sources":["/Users/cando001/Documents/MyGit/blueprint/partial-transcription-blueprint-main/src/utils/genesysCloudUtils.ts"],"names":["clientConfig","moment","platformClient","require","usersApi","UsersApi","analyticsApi","AnalyticsApi","routingApi","RoutingApi","client","ApiClient","instance","clientId","redirectUri","cache","authenticate","loginImplicitGrant","state","then","data","catch","err","console","error","getAgentByUserId","id","getUser","log","agentName","name","imageUri","images","find","i","resolution","getQueues","skipCache","getRoutingQueues","pageSize","getActiveConversationsForQueue","queueId","startInterval","add","startOf","endInterval","body","interval","toISOString","order","orderBy","paging","pageNumber","segmentFilters","type","predicates","dimension","operator","value","conversationFilters","postAnalyticsConversationsDetailsQuery","conversationData","conversations","filter","conversation","participants","sessions","mediaType"],"mappings":"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","sourcesContent":["import { clientConfig } from '../config/clientConfig';\nimport moment from 'moment';\nconst platformClient = require('purecloud-platform-client-v2/dist/node/purecloud-platform-client-v2.js');\n\nconst usersApi = new platformClient.UsersApi();\nconst analyticsApi = new platformClient.AnalyticsApi();\nconst routingApi = new platformClient.RoutingApi();\n\nconst client = platformClient.ApiClient.instance;\nconst { clientId, redirectUri } = clientConfig;\n\nconst cache: any = {};\n\n/**\n * Authenticate the client using Implicit Grant.\n * \n * @returns auth data\n */\nexport function authenticate() {\n    return client.loginImplicitGrant(clientId, redirectUri, { state: 'state' })\n        .then((data: any) => {\n            return data;\n        })\n        .catch((err: any) => {\n            console.error(err);\n        });\n}\n\n/**\n * Get a user by id.\n * \n * @param id the user's id\n * @returns user search response\n */\nexport function getAgentByUserId(id: string) {\n    if (!id) return '';\n\n    return usersApi.getUser(id)\n        .then((data: any) => {\n            console.log('AGENT USER DATA', data);\n            const agentName: string = data.name;\n            const imageUri: string = data.images?.find((i: any) => i.resolution === 'x96')?.imageUri;\n            return { agentName, imageUri };\n        })\n        .catch((err: any) => {\n            console.error(err);\n            return '';\n        });\n}\n\n/**\n * Get the queues in logged-in user's organization.\n * \n * @param skipCache determines whether to check cache before API call\n * @returns response with queues\n */ \nexport async function getQueues(skipCache: boolean = false) {\n    if (skipCache) {\n        return routingApi.getRoutingQueues({ pageSize: 100 });\n    } else if (cache['queues']){\n        return cache['queues'];\n    } else {\n        try {\n            cache['queues'] = await routingApi.getRoutingQueues({ pageSize: 100 });\n            return cache['queues'];\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\n\n/**\n * Get active conversations for queue using conversation analytics details query.\n * \n * @param queueId the queue's id\n * @returns active conversation response\n */\nexport function getActiveConversationsForQueue(queueId: string) {\n  const startInterval = moment().add(-1, 'day').startOf('day');\n  const endInterval = moment().add(1, 'day').startOf('day');\n\n  const body: any = {\n    interval: `${startInterval.toISOString(true)}/${endInterval.toISOString(true)}`,\n    order: \"asc\",\n    orderBy: \"conversationStart\",\n    paging: {\n     pageSize: 25,\n     pageNumber: 1\n    },\n    segmentFilters: [\n     {\n      type: \"or\",\n      predicates: [\n       {\n        type: \"dimension\",\n        dimension: \"queueId\",\n        operator: \"matches\",\n        value: queueId\n       }\n      ]\n     }\n    ],\n    conversationFilters: [\n     {\n      type: \"or\",\n      predicates: [\n       {\n        type: \"dimension\",\n        dimension: \"conversationEnd\",\n        operator: \"notExists\",\n        value: null\n       }\n      ]\n     }\n    ]\n   }\n  return analyticsApi.postAnalyticsConversationsDetailsQuery(body)\n    .then((conversationData: any) => {\n      console.log('CONVERSATION DATA', conversationData);\n      const conversations: any[] = conversationData?.conversations?.filter((conversation: any) => {\n          return conversation.participants?.[0]?.sessions?.[0]?.mediaType === 'voice';\n      }) || [];\n      return { queueId, conversations };\n    })\n    .catch((err: any) => {\n      console.error(err);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}