{"ast":null,"code":"var _jsxFileName = \"/Users/cando001/Documents/MyGit/blueprint/partial-transcription-blueprint-main/src/components/accordion/Accordion.tsx\";\nimport React from 'react';\nimport { AccordionSection } from './AccordionSection';\nimport './Accordion.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * Wrapper component for a collection of accordion sections\n * \n * @param props \n * @returns \n */\nexport function Accordion(props) {\n  const outerClass = props.outerClass ? `accordion ${props.outerClass}` : 'accordion';\n  const innerClass = props.innerClass ? `section-wrapper ${props.innerClass}` : 'section-wrapper';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: outerClass,\n    children: props.sections.map(section => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: innerClass,\n        children: /*#__PURE__*/_jsxDEV(AccordionSection, {\n          data: section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/cando001/Documents/MyGit/blueprint/partial-transcription-blueprint-main/src/components/accordion/Accordion.tsx"],"names":["React","AccordionSection","Accordion","props","outerClass","innerClass","sections","map","section"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAO,kBAAP;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA2C;AAC9C,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAN,GAAoB,aAAYD,KAAK,CAACC,UAAW,EAAjD,GAAqD,WAAxE;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACE,UAAN,GAAoB,mBAAkBF,KAAK,CAACE,UAAW,EAAvD,GAA2D,iBAA9E;AACA,sBACI;AAAK,IAAA,SAAS,EAAED,UAAhB;AAAA,cACKD,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAoBC,OAAD,IAA4B;AAC5C,0BACI;AAAK,QAAA,SAAS,EAAEH,UAAhB;AAAA,+BACI,QAAC,gBAAD;AAAkB,UAAA,IAAI,EAAEG;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;KAdeN,S","sourcesContent":["import React from 'react';\nimport { AccordionSection } from './AccordionSection';\nimport './Accordion.scss';\n\ninterface IAccordionProps {\n    sections: AccordionData[],\n    innerClass?: string,\n    outerClass?: string\n}\n\nexport interface AccordionData {\n    heading: React.ReactNode;\n    content: React.ReactNode;\n    showExpanded: boolean;\n    sectionClass?: string,\n    contentClass?: string\n}\n\n/**\n * Wrapper component for a collection of accordion sections\n * \n * @param props \n * @returns \n */\nexport function Accordion(props: IAccordionProps) {\n    const outerClass = props.outerClass ? `accordion ${props.outerClass}` : 'accordion';\n    const innerClass = props.innerClass ? `section-wrapper ${props.innerClass}` : 'section-wrapper'\n    return (\n        <div className={outerClass}>\n            {props.sections.map((section: AccordionData) => {\n                return (\n                    <div className={innerClass}>\n                        <AccordionSection data={section} />\n                    </div>\n                );\n            })}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}