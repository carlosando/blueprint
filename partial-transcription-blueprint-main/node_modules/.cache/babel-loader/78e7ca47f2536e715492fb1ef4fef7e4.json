{"ast":null,"code":"'use strict';\n\nconst format = require('./format');\n\nconst {\n  MESSAGE\n} = require('triple-beam');\n\nconst jsonStringify = require('safe-stable-stringify');\n/*\n * function replacer (key, value)\n * Handles proper stringification of Buffer and bigint output.\n */\n\n\nfunction replacer(key, value) {\n  if (value instanceof Buffer) return value.toString('base64'); // eslint-disable-next-line valid-typeof\n\n  if (typeof value === 'bigint') return value.toString();\n  return value;\n}\n/*\n * function json (info)\n * Returns a new instance of the JSON format that turns a log `info`\n * object into pure JSON. This was previously exposed as { json: true }\n * to transports in `winston < 3.0.0`.\n */\n\n\nmodule.exports = format(function (info) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  info[MESSAGE] = jsonStringify(info, opts.replacer || replacer, opts.space);\n  return info;\n});","map":{"version":3,"sources":["/Users/cando001/Documents/MyGit/blueprint/partial-transcription-blueprint-main/node_modules/logform/json.js"],"names":["format","require","MESSAGE","jsonStringify","replacer","key","value","Buffer","toString","module","exports","info","opts","space"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcD,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,uBAAD,CAA7B;AAEA;AACA;AACA;AACA;;;AACA,SAASG,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC5B,MAAIA,KAAK,YAAYC,MAArB,EACE,OAAOD,KAAK,CAACE,QAAN,CAAe,QAAf,CAAP,CAF0B,CAG5B;;AACA,MAAI,OAAOF,KAAP,KAAiB,QAArB,EACE,OAAOA,KAAK,CAACE,QAAN,EAAP;AACF,SAAOF,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiBV,MAAM,CAAC,UAACW,IAAD,EAAqB;AAAA,MAAdC,IAAc,uEAAP,EAAO;AAC3CD,EAAAA,IAAI,CAACT,OAAD,CAAJ,GAAgBC,aAAa,CAACQ,IAAD,EAAOC,IAAI,CAACR,QAAL,IAAiBA,QAAxB,EAAkCQ,IAAI,CAACC,KAAvC,CAA7B;AACA,SAAOF,IAAP;AACD,CAHsB,CAAvB","sourcesContent":["'use strict';\n\nconst format = require('./format');\nconst { MESSAGE } = require('triple-beam');\nconst jsonStringify = require('safe-stable-stringify');\n\n/*\n * function replacer (key, value)\n * Handles proper stringification of Buffer and bigint output.\n */\nfunction replacer(key, value) {\n  if (value instanceof Buffer)\n    return value.toString('base64');\n  // eslint-disable-next-line valid-typeof\n  if (typeof value === 'bigint')\n    return value.toString();\n  return value;\n}\n\n/*\n * function json (info)\n * Returns a new instance of the JSON format that turns a log `info`\n * object into pure JSON. This was previously exposed as { json: true }\n * to transports in `winston < 3.0.0`.\n */\nmodule.exports = format((info, opts = {}) => {\n  info[MESSAGE] = jsonStringify(info, opts.replacer || replacer, opts.space);\n  return info;\n});\n"]},"metadata":{},"sourceType":"script"}